name: Deploy Static Website

on:
  workflow_dispatch: {}
  push:
    branches:
      - main         
  #workflow_dispatch:   # Permet de déclencher manuellement pour le destroy
  

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}  # Exécute ce job uniquement sur les pushs, pas sur les dispatch manuels

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8  

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2                         
          verbose: false                     
          arch: amd64

      - name: Terraform Init
        run: terraform init
  
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2

      - name: Output website URL
        run: echo "Website URL is $(terraform output INFO)"

      - name: Cache Terraform State # Enregistre l'état entre les jobs apply et destroy
        uses: actions/cache@v4
        with:
          path: .terraform
          key: ${{ runner.os }}-terraform-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-terraform-

  destroy:
    runs-on: ubuntu-latest
    environment: Prod-manual
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8 

      - name: Restore Terraform State # Restaure l'état sauvegardé
        uses: actions/cache@v4
        with:
          path: .terraform
          key: ${{ runner.os }}-terraform-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Init
        run: terraform init

      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2                         
          verbose: false                     
          arch: amd64

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
